name: "Deploy USALauncher"

on:
  push:
    tags:
      - "USALauncher/v*"

permissions:
  contents: write
  deployments: write

env:
  PROJECT_PATH: USALauncher.csproj

jobs:
  deploy:
    runs-on: windows-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Cache NuGet Packages
        uses: actions/cache@v4.1.1
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj', '**/*.sln') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Restore Dependencies
        run: dotnet restore ${{ env.PROJECT_PATH }}

      - name: Build Project
        run: dotnet build ${{ env.PROJECT_PATH }} -c Release --no-restore

      - name: Publish Project using Publish Profile
        run: dotnet publish ${{ env.PROJECT_PATH }} -c Release /p:PublishProfile=Properties/PublishProfiles/FolderProfile.pubxml

      - name: List Published Files
        run: dir bin\Release\net461\publish

      - name: Decode Certificate
        run: |
          echo "Decoding certificate..."
          powershell -Command "[System.IO.File]::WriteAllBytes('USALauncherCert.pfx', [System.Convert]::FromBase64String('$env:CERTIFICATE_BASE64'))"
        env:
          CERTIFICATE_BASE64: ${{ secrets.CERTIFICATE_BASE64 }}

      - name: Check if PFX File Exists
        run: |
          echo "Checking for PFX file..."
          if (Test-Path 'USALauncherCert.pfx') {
              Write-Host "PFX file found."
          } else {
              Write-Host "PFX file not found."
              exit 1
          }

      - name: Code Signing
        uses: dlemstra/code-sign-action@v1
        with:
          certificate: ${{ secrets.CERTIFICATE_BASE64 }}  # Ensure this is the Base64-encoded certificate
          password: ${{ secrets.CERTIFICATE_PASSWORD }}  # Optional: your PFX password
          files: bin/Release/net461/publish/USALauncher.exe  # Specify the file to sign
          description: 'Signing USALauncher executable'  # Optional description

      - name: Create Release and Upload Release Assets
        uses: softprops/action-gh-release@v2.0.8
        with:
          tag_name: ${{ github.ref }}
          name: ${{ github.ref }}
          draft: false
          prerelease: false
          files: bin/Release/net461/publish/USALauncher.exe
        env:
          github-token: ${{ secrets.GITHUB_TOKEN }}
